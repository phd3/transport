buildscript {
  dependencies {
    classpath('com.linkedin.transport:transportable-udfs-plugin')
    //classpath files('/Users/akrai/Repo/transport/transportable-udfs-plugin/build/libs/transportable-udfs-plugin-0.0.62.jar')
  }
}

apply plugin: 'java'
apply plugin: 'test.transport.plugin'

java {
  sourceCompatibility = JavaVersion.VERSION_11
}

// /Library/Java/JavaVirtualMachines/jdk11.0.8-msft.jdk/Contents/Home
assert hasProperty('java11Home') : "Set the property 'java11Home' in your your gradle.properties pointing to a Java 11.0.7+ installation"
def javaExecutablesPath = new File(java11Home, 'bin')
def javaExecutables = [:].withDefault { execName ->
  def executable = new File(javaExecutablesPath, execName)
  assert executable.exists() : "There is no ${execName} executable in ${javaExecutablesPath}"
  executable
}
tasks.withType(AbstractCompile) {
  options.with {
    fork = true
    forkOptions.javaHome = file(java11Home)
  }
}
tasks.withType(Test) {
  executable = javaExecutables.java
}
tasks.withType(JavaExec) {
  executable = javaExecutables.java
}
tasks.withType(Javadoc) {
  executable = javaExecutables.javadoc
}

dependencies {
  // TODO: Reference all external dependencies from a single gradle file
  compile('com.google.guava:guava:24.1-jre')
  compile('org.apache.commons:commons-io:1.3.2')
}

// If the license plugin is applied, disable license checks for the autogenerated source sets
plugins.withId('com.github.hierynomus.license') {
  licenseHive.enabled = false
  licenseTrino.enabled = false
  licenseSpark.enabled = false
}

// TODO: Add a debugPlatform flag to allow debugging specific test methods in IntelliJ
// for a particular platform other than default
